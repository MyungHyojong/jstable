
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "jstable"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> base::assign(".ExTimings", "jstable-Ex.timings", pos = 'CheckExEnv')
> base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
> base::assign(".format_ptime",
+ function(x) {
+   if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
+   if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
+   options(OutDec = '.')
+   format(x[1L:3L], digits = 7L)
+ },
+ pos = 'CheckExEnv')
> 
> ### * </HEADER>
> library('jstable')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("CreateTableOne2")
> ### * CreateTableOne2
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: CreateTableOne2
> ### Title: CreateTableOne2: Modified CreateTableOne function in tableone
> ###   package
> ### Aliases: CreateTableOne2
> 
> ### ** Examples
> 
> library(survival)
> CreateTableOne2(vars = names(lung), strata = "sex", data = lung)
           level 1                 2                 p        test sig 
n          ""    "   138"          "    90"          ""       ""   NA  
inst       ""    " 10.56 ± 7.80"   " 11.89 ± 9.00"   " 0.254" ""   ""  
time       ""    "283.23 ± 213.05" "338.97 ± 203.47" " 0.049" ""   "**"
status     ""    "  1.81 ± 0.39"   "  1.59 ± 0.49"   "<0.001" ""   "**"
age        ""    " 63.34 ± 9.14"   " 61.08 ± 8.85"   " 0.064" ""   ""  
sex        ""    "  1.00 ± 0.00"   "  2.00 ± 0.00"   "   NaN" ""   NA  
ph.ecog    ""    "  0.96 ± 0.71"   "  0.93 ± 0.73"   " 0.759" ""   ""  
ph.karno   ""    " 81.82 ± 12.38"  " 82.11 ± 12.32"  " 0.864" ""   ""  
pat.karno  ""    " 79.41 ± 14.29"  " 80.79 ± 15.17"  " 0.497" ""   ""  
meal.cal   ""    "980.54 ± 413.26" "840.70 ± 369.08" " 0.020" ""   "**"
wt.loss    ""    " 11.22 ± 12.98"  "  7.77 ± 13.18"  " 0.060" ""   ""  
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("CreateTableOne2", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survival’

> nameEx("CreateTableOneJS")
> ### * CreateTableOneJS
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: CreateTableOneJS
> ### Title: CreateTableOneJS: Modified CreateTableOne function in tableone
> ###   package
> ### Aliases: CreateTableOneJS
> 
> ### ** Examples
> 
> library(survival)
> CreateTableOneJS(vars = names(lung), strata = "sex", data = lung)
$table
           level 1                 2                 p        test sig 
n          ""    "   138"          "    90"          ""       ""   NA  
inst       ""    " 10.56 ± 7.80"   " 11.89 ± 9.00"   " 0.254" ""   ""  
time       ""    "283.23 ± 213.05" "338.97 ± 203.47" " 0.049" ""   "**"
status     ""    "  1.81 ± 0.39"   "  1.59 ± 0.49"   "<0.001" ""   "**"
age        ""    " 63.34 ± 9.14"   " 61.08 ± 8.85"   " 0.064" ""   ""  
sex        ""    "  1.00 ± 0.00"   "  2.00 ± 0.00"   "   NaN" ""   NA  
ph.ecog    ""    "  0.96 ± 0.71"   "  0.93 ± 0.73"   " 0.759" ""   ""  
ph.karno   ""    " 81.82 ± 12.38"  " 82.11 ± 12.32"  " 0.864" ""   ""  
pat.karno  ""    " 79.41 ± 14.29"  " 80.79 ± 15.17"  " 0.497" ""   ""  
meal.cal   ""    "980.54 ± 413.26" "840.70 ± 369.08" " 0.020" ""   "**"
wt.loss    ""    " 11.22 ± 12.98"  "  7.77 ± 13.18"  " 0.060" ""   ""  

$caption
[1] "Stratified by sex"

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("CreateTableOneJS", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survival’

> nameEx("LabelepiDisplay")
> ### * LabelepiDisplay
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: LabelepiDisplay
> ### Title: LabelepiDisplay: Apply label information to epiDisplay object
> ###   using label data
> ### Aliases: LabelepiDisplay
> 
> ### ** Examples
> 
> fit <- glm(Sepal.Length ~ Sepal.Width + Species, data = iris)
> fit.table <- glmshow.display(fit)
> iris.label <- mk.lev(iris)
> LabelepiDisplay(fit.table, label = TRUE, ref = iris.label)
                     crude coeff.(95%CI)  crude P value adj. coeff.(95%CI)
Sepal.Width          "-0.22 (-0.53,0.08)" "0.152"       "0.8 (0.6,1.01)"  
Species: ref.=setosa NA                   NA            NA                
   versicolor        "0.93 (0.73,1.13)"   "< 0.001"     "1.46 (1.24,1.68)"
   virginica         "1.58 (1.38,1.78)"   "< 0.001"     "1.95 (1.75,2.14)"
                     ""                   ""            ""                
No. of observations  "150"                ""            ""                
R-squared            "0.7259"             ""            ""                
AIC value            "183.9366"           ""            ""                
                     adj. P value sig 
Sepal.Width          "< 0.001"    "**"
Species: ref.=setosa NA           NA  
   versicolor        "< 0.001"    "**"
   virginica         "< 0.001"    "**"
                     ""           NA  
No. of observations  ""           NA  
R-squared            ""           NA  
AIC value            ""           NA  
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("LabelepiDisplay", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("LabeljsCox")
> ### * LabeljsCox
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: LabeljsCox
> ### Title: LabeljsCox: Apply label information to cox2.display object using
> ###   label data
> ### Aliases: LabeljsCox
> 
> ### ** Examples
> 
> library(survival)
> fit <- coxph(Surv(time, status) ~ sex + ph.ecog + ph.karno + cluster(inst),
+   data = lung, model = TRUE
+ )
> fit.table <- cox2.display(fit)
> lung.label <- mk.lev(lung)
> LabeljsCox(fit.table, ref = lung.label)
$table
         crude HR(95%CI)   crude P value adj. HR(95%CI)     adj. P value
sex      "0.6 (0.45,0.79)" "< 0.001"     "0.56 (0.44,0.72)" "< 0.001"   
ph.ecog  "1.6 (1.23,2.07)" "< 0.001"     "1.91 (1.22,2.98)" "0.004"     
ph.karno "0.98 (0.97,1)"   "0.076"       "1.01 (0.98,1.04)" "0.416"     

$ranef
        [,1] [,2] [,3] [,4]
cluster   NA   NA   NA   NA
inst      NA   NA   NA   NA

$metric
                    [,1] [,2] [,3] [,4]
<NA>                  NA   NA   NA   NA
No. of observations  225   NA   NA   NA
No. of events        162   NA   NA   NA

$caption
[1] "Marginal Cox model on time ('time') to event ('status') - Group inst"

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("LabeljsCox", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survival’

> nameEx("LabeljsGeeglm")
> ### * LabeljsGeeglm
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: LabeljsGeeglm
> ### Title: LabeljsGeeglm: Apply label information to geeglm.display object
> ###   using label data
> ### Aliases: LabeljsGeeglm
> 
> ### ** Examples
> 
> library(geepack)
> library(jstable)
> data(dietox)
> dietox$Cu <- as.factor(dietox$Cu)
> gee01 <- geeglm(Weight ~ Time + Cu,
+   id = Pig, data = dietox,
+   family = gaussian, corstr = "ex"
+ )
> g1 <- geeglm.display(gee01)
> LabeljsGeeglm(g1, ref = mk.lev(dietox))
$table
               crude coeff(95%CI)   crude P value adj. coeff(95%CI)  
Time           "6.94 (6.79,7.1)"    "< 0.001"     "6.94 (6.79,7.1)"  
Cu: ref.=Cu000 NA                   NA            NA                 
               "-0.59 (-3.73,2.54)" "0.711"       "-0.84 (-3.9,2.23)"
               "1.9 (-1.87,5.66)"   "0.324"       "1.77 (-1.9,5.45)" 
               adj. P value
Time           "< 0.001"   
Cu: ref.=Cu000 NA          
               "0.593"     
               "0.345"     

$metric
                                 crude coeff(95%CI) crude P value
                                 NA                 NA           
Estimated correlation parameters "0.775"            NA           
No. of clusters                  "72"               NA           
No. of observations              "861"              NA           
                                 adj. coeff(95%CI) adj. P value
                                 NA                NA          
Estimated correlation parameters NA                NA          
No. of clusters                  NA                NA          
No. of observations              NA                NA          

$caption
[1] "GEE(gaussian) predicting Weight by Time, Cu - Group Pig"

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("LabeljsGeeglm", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:geepack’

> nameEx("LabeljsMetric")
> ### * LabeljsMetric
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: LabeljsMetric
> ### Title: LabeljsMetric: Apply label information to jstable metric object
> ###   using label data
> ### Aliases: LabeljsMetric
> 
> ### ** Examples
> 
> library(coxme)
Loading required package: survival
Loading required package: bdsmatrix

Attaching package: ‘bdsmatrix’

The following object is masked from ‘package:base’:

    backsolve

> fit <- coxme(Surv(time, status) ~ sex + ph.ecog + ph.karno + (1 | inst) + (1 | sex), lung)
> fit.table <- coxme.display(fit)
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
> lung.label <- mk.lev(lung)
> LabeljsTable(fit.table$table, ref = lung.label)
         crude HR(95%CI)    crude P value adj. HR(95%CI)     adj. P value
sex      "0.59 (0.42,0.82)" "0.002"       "0.56 (0.4,0.79)"  "< 0.001"   
ph.ecog  "1.66 (1.32,2.09)" "< 0.001"     "1.96 (1.38,2.8)"  "< 0.001"   
ph.karno "0.98 (0.97,1)"    "0.005"       "1.01 (0.99,1.03)" "0.241"     
> LabeljsRanef(fit.table$ranef, ref = lung.label)
                [,1] [,2] [,3] [,4]
Random effect     NA   NA   NA   NA
inst(Intercept) 0.02   NA   NA   NA
sex(Intercept)  0.00   NA   NA   NA
> LabeljsMetric(fit.table$metric, ref = lung.label)
                    [,1] [,2] [,3] [,4]
<NA>                  NA   NA   NA   NA
No. of group(inst)    18   NA   NA   NA
No. of group(sex)      2   NA   NA   NA
No. of observations  225   NA   NA   NA
No. of events        162   NA   NA   NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("LabeljsMetric", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:coxme’, ‘package:bdsmatrix’, ‘package:survival’

> nameEx("LabeljsMixed")
> ### * LabeljsMixed
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: LabeljsMixed
> ### Title: LabeljsMixed: Apply label information to jstable object using
> ###   label data
> ### Aliases: LabeljsMixed
> 
> ### ** Examples
> 
> library(coxme)
Loading required package: survival
Loading required package: bdsmatrix

Attaching package: ‘bdsmatrix’

The following object is masked from ‘package:base’:

    backsolve

> fit <- coxme(Surv(time, status) ~ sex + ph.ecog + ph.karno + (1 | inst) + (1 | sex), lung)
> fit.table <- coxme.display(fit)
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
> lung.label <- mk.lev(lung)
> LabeljsMixed(fit.table, ref = lung.label)
$table
         crude HR(95%CI)    crude P value adj. HR(95%CI)     adj. P value
sex      "0.59 (0.42,0.82)" "0.002"       "0.56 (0.4,0.79)"  "< 0.001"   
ph.ecog  "1.66 (1.32,2.09)" "< 0.001"     "1.96 (1.38,2.8)"  "< 0.001"   
ph.karno "0.98 (0.97,1)"    "0.005"       "1.01 (0.99,1.03)" "0.241"     

$ranef
                [,1] [,2] [,3] [,4]
Random effect     NA   NA   NA   NA
inst(Intercept) 0.02   NA   NA   NA
sex(Intercept)  0.00   NA   NA   NA

$metric
                    [,1] [,2] [,3] [,4]
<NA>                  NA   NA   NA   NA
No. of group(inst)    18   NA   NA   NA
No. of group(sex)      2   NA   NA   NA
No. of observations  225   NA   NA   NA
No. of events        162   NA   NA   NA

$caption
[1] "Mixed effects Cox model on time ('time') to event ('status') - Group inst, sex"

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("LabeljsMixed", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:coxme’, ‘package:bdsmatrix’, ‘package:survival’

> nameEx("LabeljsRanef")
> ### * LabeljsRanef
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: LabeljsRanef
> ### Title: LabeljsRanef: Apply label information to jstable random effect
> ###   object using label data
> ### Aliases: LabeljsRanef
> 
> ### ** Examples
> 
> library(coxme)
Loading required package: survival
Loading required package: bdsmatrix

Attaching package: ‘bdsmatrix’

The following object is masked from ‘package:base’:

    backsolve

> fit <- coxme(Surv(time, status) ~ sex + ph.ecog + ph.karno + (1 | inst) + (1 | sex), lung)
> fit.table <- coxme.display(fit)
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
> lung.label <- mk.lev(lung)
> LabeljsTable(fit.table$table, ref = lung.label)
         crude HR(95%CI)    crude P value adj. HR(95%CI)     adj. P value
sex      "0.59 (0.42,0.82)" "0.002"       "0.56 (0.4,0.79)"  "< 0.001"   
ph.ecog  "1.66 (1.32,2.09)" "< 0.001"     "1.96 (1.38,2.8)"  "< 0.001"   
ph.karno "0.98 (0.97,1)"    "0.005"       "1.01 (0.99,1.03)" "0.241"     
> LabeljsRanef(fit.table$ranef, ref = lung.label)
                [,1] [,2] [,3] [,4]
Random effect     NA   NA   NA   NA
inst(Intercept) 0.02   NA   NA   NA
sex(Intercept)  0.00   NA   NA   NA
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("LabeljsRanef", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:coxme’, ‘package:bdsmatrix’, ‘package:survival’

> nameEx("LabeljsTable")
> ### * LabeljsTable
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: LabeljsTable
> ### Title: LabeljsTable: Apply label information to jstable object using
> ###   label data
> ### Aliases: LabeljsTable
> 
> ### ** Examples
> 
> library(coxme)
Loading required package: survival
Loading required package: bdsmatrix

Attaching package: ‘bdsmatrix’

The following object is masked from ‘package:base’:

    backsolve

> fit <- coxme(Surv(time, status) ~ sex + ph.ecog + ph.karno + (1 | inst) + (1 | sex), lung)
> fit.table <- coxme.display(fit)
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
> lung.label <- mk.lev(lung)
> LabeljsTable(fit.table$table, ref = lung.label)
         crude HR(95%CI)    crude P value adj. HR(95%CI)     adj. P value
sex      "0.59 (0.42,0.82)" "0.002"       "0.56 (0.4,0.79)"  "< 0.001"   
ph.ecog  "1.66 (1.32,2.09)" "< 0.001"     "1.96 (1.38,2.8)"  "< 0.001"   
ph.karno "0.98 (0.97,1)"    "0.005"       "1.01 (0.99,1.03)" "0.241"     
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("LabeljsTable", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:coxme’, ‘package:bdsmatrix’, ‘package:survival’

> nameEx("TableSubgroupCox")
> ### * TableSubgroupCox
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TableSubgroupCox
> ### Title: TableSubgroupCox: Sub-group analysis table for Cox/svycox model.
> ### Aliases: TableSubgroupCox
> 
> ### ** Examples
> 
> library(survival)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> lung %>%
+   mutate(
+     status = as.integer(status == 1),
+     sex = factor(sex),
+     kk = factor(as.integer(pat.karno >= 70))
+   ) -> lung
> TableSubgroupCox(Surv(time, status) ~ sex, data = lung, time_eventrate = 100)
     Variable Count Percent Point Estimate Lower Upper 1   2 P value
sex2  Overall   228     100           1.91  1.14   3.2 0 1.2   0.014
     P for interaction
sex2                NA
> TableSubgroupCox(Surv(time, status) ~ sex,
+   var_subgroup = "kk", data = lung,
+   time_eventrate = 100
+ )
   Variable Count Percent Point Estimate Lower Upper    1    2 P value
1        kk  <NA>    <NA>           <NA>  <NA>  <NA> <NA> <NA>    <NA>
0         0    38    16.9           2.88  0.31 26.49    0    0    0.35
11        1   187    83.1           1.84  1.08  3.14    0  1.5   0.026
   P for interaction
1              0.525
0               <NA>
11              <NA>
> 
> ## survey design
> library(survey)
Loading required package: grid
Loading required package: Matrix

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

> data.design <- svydesign(id = ~1, data = lung)
Warning in svydesign.default(id = ~1, data = lung) :
  No weights or probabilities supplied, assuming equal probability
> TableSubgroupCox(Surv(time, status) ~ sex, data = data.design, time_eventrate = 100)
Independent Sampling design (with replacement)
svydesign(id = ~1, data = lung)
     Variable Count Percent Point Estimate Lower Upper 1   2 P value
sex2  Overall   228     100           1.91  1.14  3.19 0 1.2   0.013
     P for interaction
sex2                NA
> TableSubgroupCox(Surv(time, status) ~ sex,
+   var_subgroup = "kk", data = data.design,
+   time_eventrate = 100
+ )
Independent Sampling design (with replacement)
svydesign(id = ~1, data = lung)
New names:
• `` -> `...1`
• `` -> `...2`
Independent Sampling design (with replacement)
subset(data, get(var_subgroup) == .)
Independent Sampling design (with replacement)
subset(data, get(var_subgroup) == .)
     Variable Count Percent Point Estimate Lower Upper    1    2 P value
1          kk  <NA>    <NA>           <NA>  <NA>  <NA> <NA> <NA>    <NA>
init        0    38    16.9           2.88  0.31  27.1    0    0   0.355
            1   187    83.1           1.84  1.08  3.11    0  2.9   0.024
     P for interaction
1                0.523
init              <NA>
                  <NA>
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TableSubgroupCox", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survey’, ‘package:Matrix’, ‘package:grid’,
  ‘package:dplyr’, ‘package:survival’

> nameEx("TableSubgroupGLM")
> ### * TableSubgroupGLM
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TableSubgroupGLM
> ### Title: TableSubgroupGLM: Sub-group analysis table for GLM.
> ### Aliases: TableSubgroupGLM
> 
> ### ** Examples
> 
> library(survival)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> lung %>%
+   mutate(
+     status = as.integer(status == 1),
+     sex = factor(sex),
+     kk = factor(as.integer(pat.karno >= 70))
+   ) -> lung
> TableSubgroupGLM(status ~ sex, data = lung, family = "binomial")
     Variable Count Percent   OR Lower Upper P value P for interaction
sex2  Overall   228     100 3.01  1.65  5.47  <0.001                NA
> TableSubgroupGLM(status ~ sex, var_subgroup = "kk", data = lung, family = "binomial")
     Variable Count Percent   OR Lower Upper P value P for interaction
1          kk  <NA>    <NA> <NA>  <NA>  <NA>    <NA>             0.476
init        0    38    16.9    7   0.7 70.03   0.098              <NA>
            1   187    83.1 2.94  1.55  5.57   0.001              <NA>
> 
> ## survey design
> library(survey)
Loading required package: grid
Loading required package: Matrix

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

> data.design <- svydesign(id = ~1, data = lung)
Warning in svydesign.default(id = ~1, data = lung) :
  No weights or probabilities supplied, assuming equal probability
> TableSubgroupGLM(status ~ sex, data = data.design, family = "binomial")
     Variable Count Percent   OR Lower Upper P value P for interaction
sex2  Overall   228     100 3.01  1.65  5.48  <0.001                NA
> TableSubgroupGLM(status ~ sex, var_subgroup = "kk", data = data.design, family = "binomial")
     Variable Count Percent   OR Lower Upper P value P for interaction
1          kk  <NA>    <NA> <NA>  <NA>  <NA>    <NA>             0.478
init        0    38    16.9    7   0.7  70.4   0.107              <NA>
            1   187    83.1 2.94  1.55  5.58   0.001              <NA>
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TableSubgroupGLM", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survey’, ‘package:Matrix’, ‘package:grid’,
  ‘package:dplyr’, ‘package:survival’

> nameEx("TableSubgroupMultiCox")
> ### * TableSubgroupMultiCox
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TableSubgroupMultiCox
> ### Title: TableSubgroupMultiCox: Multiple sub-group analysis table for
> ###   Cox/svycox model.
> ### Aliases: TableSubgroupMultiCox
> 
> ### ** Examples
> 
> library(survival)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> lung %>%
+   mutate(
+     status = as.integer(status == 1),
+     sex = factor(sex),
+     kk = factor(as.integer(pat.karno >= 70)),
+     kk1 = factor(as.integer(pat.karno >= 60))
+   ) -> lung
> TableSubgroupMultiCox(Surv(time, status) ~ sex,
+   var_subgroups = c("kk", "kk1"),
+   data = lung, time_eventrate = 100, line = TRUE
+ )
Warning in coxph.fit(X, Y, istrat, offset, init, control, weights = weights,  :
  Loglik converged before variable  1,2,3 ; coefficient may be infinite. 
       Variable Count Percent Point Estimate Lower Upper    1    2 P value
sex2    Overall   228     100           1.91  1.14   3.2    0  1.2   0.014
1...1      <NA>  <NA>    <NA>           <NA>  <NA>  <NA> <NA> <NA>    <NA>
12...2       kk  <NA>    <NA>           <NA>  <NA>  <NA> <NA> <NA>    <NA>
0...3         0    38    16.9           2.88  0.31 26.49    0    0    0.35
11...4        1   187    83.1           1.84  1.08  3.14    0  1.5   0.026
1...5      <NA>  <NA>    <NA>           <NA>  <NA>  <NA> <NA> <NA>    <NA>
12...6      kk1  <NA>    <NA>           <NA>  <NA>  <NA> <NA> <NA>    <NA>
0...7         0     8     3.6           <NA>  <NA>  <NA>    0    0    <NA>
11...8        1   217    96.4           1.88  1.12  3.17    0  1.3   0.018
       P for interaction
sex2                <NA>
1...1               <NA>
12...2             0.525
0...3               <NA>
11...4              <NA>
1...5               <NA>
12...6             0.997
0...7               <NA>
11...8              <NA>
> 
> ## survey design
> library(survey)
Loading required package: grid
Loading required package: Matrix

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

> data.design <- svydesign(id = ~1, data = lung)
Warning in svydesign.default(id = ~1, data = lung) :
  No weights or probabilities supplied, assuming equal probability
> TableSubgroupMultiCox(Surv(time, status) ~ sex,
+   var_subgroups = c("kk", "kk1"),
+   data = data.design, time_eventrate = 100
+ )
Independent Sampling design (with replacement)
svydesign(id = ~1, data = lung)
Independent Sampling design (with replacement)
svydesign(id = ~1, data = lung)
New names:
• `` -> `...1`
• `` -> `...2`
Independent Sampling design (with replacement)
subset(data, get(var_subgroup) == .)
Independent Sampling design (with replacement)
subset(data, get(var_subgroup) == .)
Warning in coxph.fit(X, Y, istrat, offset, init, control, weights = weights,  :
  Loglik converged before variable  1,2,3 ; coefficient may be infinite. 
Independent Sampling design (with replacement)
svydesign(id = ~1, data = lung)
Warning in coxph.fit(X, Y, istrat, offset, init, control, weights = weights,  :
  Loglik converged before variable  1,2,3 ; coefficient may be infinite. 
New names:
• `` -> `...1`
• `` -> `...2`
Independent Sampling design (with replacement)
subset(data, get(var_subgroup) == .)
      Variable Count Percent Point Estimate Lower Upper    1    2 P value
sex2   Overall   228     100           1.91  1.14  3.19    0  1.2   0.013
1...1       kk  <NA>    <NA>           <NA>  <NA>  <NA> <NA> <NA>    <NA>
init         0    38    16.9           2.88  0.31  27.1    0    0   0.355
...3         1   187    83.1           1.84  1.08  3.11    0  2.9   0.024
1...4      kk1  <NA>    <NA>           <NA>  <NA>  <NA> <NA> <NA>    <NA>
...5         0  <NA>    <NA>           <NA>  <NA>  <NA>    0    0    <NA>
sex21        1   217    <NA>           1.88  1.12  3.15    0  1.3   0.017
      P for interaction
sex2               <NA>
1...1             0.523
init               <NA>
...3               <NA>
1...4            <0.001
...5               <NA>
sex21              <NA>
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TableSubgroupMultiCox", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survey’, ‘package:Matrix’, ‘package:grid’,
  ‘package:dplyr’, ‘package:survival’

> nameEx("TableSubgroupMultiGLM")
> ### * TableSubgroupMultiGLM
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: TableSubgroupMultiGLM
> ### Title: TableSubgroupMultiGLM: Multiple sub-group analysis table for
> ###   GLM.
> ### Aliases: TableSubgroupMultiGLM
> 
> ### ** Examples
> 
> library(survival)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> lung %>%
+   mutate(
+     status = as.integer(status == 1),
+     sex = factor(sex),
+     kk = factor(as.integer(pat.karno >= 70)),
+     kk1 = factor(as.integer(pat.karno >= 60))
+   ) -> lung
> TableSubgroupMultiGLM(status ~ sex,
+   var_subgroups = c("kk", "kk1"),
+   data = lung, line = TRUE, family = "binomial"
+ )
         Variable Count Percent           OR Lower Upper P value
sex2      Overall   228     100         3.01  1.65  5.47  <0.001
1...1        <NA>  <NA>    <NA>         <NA>  <NA>  <NA>    <NA>
11...2         kk  <NA>    <NA>         <NA>  <NA>  <NA>    <NA>
init...3        0    38    16.9            7   0.7 70.03   0.098
...4            1   187    83.1         2.94  1.55  5.57   0.001
1...5        <NA>  <NA>    <NA>         <NA>  <NA>  <NA>    <NA>
11...6        kk1  <NA>    <NA>         <NA>  <NA>  <NA>    <NA>
init...7        0     8     3.6 314366015.19     0   Inf   0.997
...8            1   217    96.4         2.85  1.55  5.25   0.001
         P for interaction
sex2                  <NA>
1...1                 <NA>
11...2               0.476
init...3              <NA>
...4                  <NA>
1...5                 <NA>
11...6               0.984
init...7              <NA>
...8                  <NA>
> 
> ## survey design
> library(survey)
Loading required package: grid
Loading required package: Matrix

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

> data.design <- svydesign(id = ~1, data = lung)
Warning in svydesign.default(id = ~1, data = lung) :
  No weights or probabilities supplied, assuming equal probability
> TableSubgroupMultiGLM(status ~ sex,
+   var_subgroups = c("kk", "kk1"),
+   data = data.design, family = "binomial"
+ )
         Variable Count Percent           OR       Lower         Upper P value
sex2      Overall   228     100         3.01        1.65          5.48  <0.001
1...1          kk  <NA>    <NA>         <NA>        <NA>          <NA>    <NA>
init...2        0    38    16.9            7         0.7          70.4   0.107
...3            1   187    83.1         2.94        1.55          5.58   0.001
1...4         kk1  <NA>    <NA>         <NA>        <NA>          <NA>    <NA>
init...5        0     8     3.6 314366015.19 35102996.37 2815314979.23  <0.001
...6            1   217    96.4         2.85        1.55          5.25   0.001
         P for interaction
sex2                  <NA>
1...1                0.478
init...2              <NA>
...3                  <NA>
1...4               <0.001
init...5              <NA>
...6                  <NA>
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("TableSubgroupMultiGLM", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survey’, ‘package:Matrix’, ‘package:grid’,
  ‘package:dplyr’, ‘package:survival’

> nameEx("coefNA")
> ### * coefNA
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: coefNA
> ### Title: coefNA: make coefficient table with NA
> ### Aliases: coefNA
> 
> ### ** Examples
> 
> 
> coefNA(glm(mpg ~ wt + qsec, data = mtcars))
             Estimate Std. Error    t value     Pr(>|t|)
(Intercept) 19.746223  5.2520617   3.759709 7.650466e-04
wt          -5.047982  0.4839974 -10.429771 2.518948e-11
qsec         0.929198  0.2650173   3.506179 1.499883e-03
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("coefNA", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("cox2.display")
> ### * cox2.display
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: cox2.display
> ### Title: cox2.display: table for coxph.object with model option: TRUE -
> ###   allow "frailty" or "cluster" model
> ### Aliases: cox2.display
> 
> ### ** Examples
> 
> library(survival)
> data(lung)
Warning in data(lung) : data set ‘lung’ not found
> fit1 <- coxph(Surv(time, status) ~ ph.ecog + age + cluster(inst), data = lung, model = TRUE)
> fit2 <- coxph(Surv(time, status) ~ ph.ecog + age + frailty(inst), data = lung, model = TRUE)
> cox2.display(fit1)
$table
        crude HR(95%CI)    crude P value adj. HR(95%CI)  adj. P value
ph.ecog "1.61 (1.25,2.08)" "< 0.001"     "1.56 (1.22,2)" "< 0.001"   
age     "1.02 (1.01,1.03)" "0.007"       "1.01 (1,1.02)" "0.085"     

$ranef
        [,1] [,2] [,3] [,4]
cluster   NA   NA   NA   NA
inst      NA   NA   NA   NA

$metric
                    [,1] [,2] [,3] [,4]
<NA>                  NA   NA   NA   NA
No. of observations  226   NA   NA   NA
No. of events        163   NA   NA   NA

$caption
[1] "Marginal Cox model on time ('time') to event ('status') - Group inst"

> cox2.display(fit2)
$table
        crude HR(95%CI)    crude P value adj. HR(95%CI)     adj. P value
ph.ecog "1.64 (1.31,2.05)" "< 0.001"     "1.58 (1.26,1.99)" "< 0.001"   
age     "1.02 (1,1.04)"    "0.041"       "1.01 (0.99,1.03)" "0.225"     

$ranef
        [,1] [,2] [,3] [,4]
frailty   NA   NA   NA   NA
inst      NA   NA   NA   NA

$metric
                    [,1] [,2] [,3] [,4]
<NA>                  NA   NA   NA   NA
No. of observations  226   NA   NA   NA
No. of events        163   NA   NA   NA

$caption
[1] "Frailty Cox model on time ('time') to event ('status') - Group inst"

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("cox2.display", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survival’

> nameEx("coxExp")
> ### * coxExp
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: coxExp
> ### Title: coxExp: transform the unit of coefficients in cox model(internal
> ###   function)
> ### Aliases: coxExp
> 
> ### ** Examples
> 
> library(coxme)
Loading required package: survival
Loading required package: bdsmatrix

Attaching package: ‘bdsmatrix’

The following object is masked from ‘package:base’:

    backsolve

> fit <- coxme(Surv(time, status) ~ ph.ecog + age + (1 | inst), lung)
> jstable:::coxExp(jstable:::coxmeTable(fit))
     HR        pv                    
[1,] "2 (1,2)" "7.17364842448553e-05"
[2,] "1 (1,1)" "0.226949744823602"   
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("coxExp", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:coxme’, ‘package:bdsmatrix’, ‘package:survival’

> nameEx("coxme.display")
> ### * coxme.display
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: coxme.display
> ### Title: coxme.display: table for coxme.object (coxme package)
> ### Aliases: coxme.display
> 
> ### ** Examples
> 
> library(coxme)
Loading required package: survival
Loading required package: bdsmatrix

Attaching package: ‘bdsmatrix’

The following object is masked from ‘package:base’:

    backsolve

> fit <- coxme(Surv(time, status) ~ ph.ecog + age + (1 | inst), lung)
> coxme.display(fit)
$table
        crude HR(95%CI)    crude P value adj. HR(95%CI)     adj. P value
ph.ecog "1.66 (1.32,2.09)" "< 0.001"     "1.61 (1.27,2.03)" "< 0.001"   
age     "1.02 (1,1.04)"    "0.043"       "1.01 (0.99,1.03)" "0.227"     

$ranef
                [,1] [,2] [,3] [,4]
Random effect     NA   NA   NA   NA
inst(Intercept) 0.02   NA   NA   NA

$metric
                    [,1] [,2] [,3] [,4]
<NA>                  NA   NA   NA   NA
No. of groups(inst)   18   NA   NA   NA
No. of observations  226   NA   NA   NA
No. of events        163   NA   NA   NA

$caption
[1] "Mixed effects Cox model on time ('time') to event ('status') - Group inst"

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("coxme.display", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:coxme’, ‘package:bdsmatrix’, ‘package:survival’

> nameEx("coxmeTable")
> ### * coxmeTable
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: coxmeTable
> ### Title: coxmeTable: Summary table of coxme.object(internal function)
> ### Aliases: coxmeTable
> 
> ### ** Examples
> 
> library(coxme)
Loading required package: survival
Loading required package: bdsmatrix

Attaching package: ‘bdsmatrix’

The following object is masked from ‘package:base’:

    backsolve

> fit <- coxme(Surv(time, status) ~ ph.ecog + age + (1 | inst), lung)
> jstable:::coxmeTable(fit)
              beta          se        z            p
ph.ecog 0.47319522 0.119179189 3.970452 7.173648e-05
age     0.01139445 0.009430508 1.208254 2.269497e-01
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("coxmeTable", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:coxme’, ‘package:bdsmatrix’, ‘package:survival’

> nameEx("extractAIC.coxme")
> ### * extractAIC.coxme
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: extractAIC.coxme
> ### Title: extractAIC.coxme: Extract AIC from coxme.object
> ### Aliases: extractAIC.coxme
> 
> ### ** Examples
> 
> library(coxme)
Loading required package: survival
Loading required package: bdsmatrix

Attaching package: ‘bdsmatrix’

The following object is masked from ‘package:base’:

    backsolve

> fit <- coxme(Surv(time, status) ~ ph.ecog + age + (1 | inst), lung)
> extractAIC(fit)
Integrated  Penalized 
  13.29119   15.68780 
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("extractAIC.coxme", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:coxme’, ‘package:bdsmatrix’, ‘package:survival’

> nameEx("geeExp")
> ### * geeExp
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: geeExp
> ### Title: geeExp: transform the unit of coefficients (internal function)
> ### Aliases: geeExp
> 
> ### ** Examples
> 
> library(geepack)
> data(dietox)
> dietox$Cu <- as.factor(dietox$Cu)
> gee.uni <- geeUni("Weight", c("Time", "Cu"),
+   data = dietox, id.vec = dietox$Pig,
+   family = "gaussian", cor.type = "exchangeable"
+ )
Warning: Using formula(x) is deprecated when x is a character vector of length > 1.
  Consider formula(paste(x, collapse = " ")) instead.
> gee.exp <- geeExp(gee.uni, "binomial", 2)
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("geeExp", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:geepack’

> nameEx("geeUni")
> ### * geeUni
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: geeUni
> ### Title: geeUni: The coefficient of univariate gee (internal function)
> ### Aliases: geeUni
> 
> ### ** Examples
> 
> library(geepack)
> data(dietox)
> dietox$Cu <- as.factor(dietox$Cu)
> gee.uni <- geeUni("Weight", "Time",
+   data = dietox, id.vec = dietox$Pig,
+   family = "gaussian", cor.type = "exchangeable"
+ )
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("geeUni", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:geepack’

> nameEx("geeglm.display")
> ### * geeglm.display
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: geeglm.display
> ### Title: geeglm.display
> ### Aliases: geeglm.display
> 
> ### ** Examples
> 
> library(geepack)
> data(dietox)
> dietox$Cu <- as.factor(dietox$Cu)
> gee01 <- geeglm(Weight ~ Time + Cu,
+   id = Pig, data = dietox,
+   family = gaussian, corstr = "ex"
+ )
> geeglm.display(gee01)
$caption
[1] "GEE(gaussian) predicting Weight by Time, Cu - Group Pig"

$table
               crude coeff(95%CI)   crude P value adj. coeff(95%CI)  
Time           "6.94 (6.79,7.1)"    "< 0.001"     "6.94 (6.79,7.1)"  
Cu: ref.=Cu000 NA                   NA            NA                 
      035      "-0.59 (-3.73,2.54)" "0.711"       "-0.84 (-3.9,2.23)"
      175      "1.9 (-1.87,5.66)"   "0.324"       "1.77 (-1.9,5.45)" 
               adj. P value
Time           "< 0.001"   
Cu: ref.=Cu000 NA          
      035      "0.593"     
      175      "0.345"     

$metric
                                 crude coeff(95%CI) crude P value
                                 NA                 NA           
Estimated correlation parameters "0.775"            NA           
No. of clusters                  "72"               NA           
No. of observations              "861"              NA           
                                 adj. coeff(95%CI) adj. P value
                                 NA                NA          
Estimated correlation parameters NA                NA          
No. of clusters                  NA                NA          
No. of observations              NA                NA          

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("geeglm.display", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:geepack’

> nameEx("glmshow.display")
> ### * glmshow.display
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: glmshow.display
> ### Title: glmshow.display: Show summary table of glm object.
> ### Aliases: glmshow.display
> 
> ### ** Examples
> 
> glmshow.display(glm(mpg ~ wt + qsec, data = mtcars))
$first.line
[1] "Linear regression predicting mpg\n"

$table
     crude coeff.(95%CI)   crude P value adj. coeff.(95%CI) adj. P value
wt   "-5.34 (-6.44,-4.25)" "< 0.001"     "-5.05 (-6,-4.1)"  "< 0.001"   
qsec "1.41 (0.32,2.51)"    "0.017"       "0.93 (0.41,1.45)" "0.001"     

$last.lines
[1] "No. of observations = 32\nR-squared = 0.8264\nAIC value = 156.7205\n\n"

attr(,"class")
[1] "display" "list"   
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("glmshow.display", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("lmer.display")
> ### * lmer.display
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: lmer.display
> ### Title: lmer.display: table for "lmerMod" or "glmerMod" object (lme4
> ###   package)
> ### Aliases: lmer.display
> 
> ### ** Examples
> 
> library(geepack)
> data(dietox)
> dietox$Cu <- as.factor(dietox$Cu)
> l1 <- lme4::lmer(Weight ~ Time + Cu + (1 | Pig) + (1 | Evit), data = dietox)
> lmer.display(l1)
boundary (singular) fit: see help('isSingular')
boundary (singular) fit: see help('isSingular')
$table
                     crude coeff(95%CI) crude P value adj. coeff(95%CI)
Time                   6.94 (6.88,7.01)     0.0000000  6.94 (6.88,7.01)
Cu: ref.=Cu000                     <NA>            NA              <NA>
      035            -0.57 (-4.66,3.52)     0.7837049 -0.81 (-4.42,2.8)
      175              1.9 (-2.23,6.04)     0.3666825 1.78 (-1.87,5.42)
Random effects                     <NA>            NA              <NA>
Pig                                39.7            NA              <NA>
Evit                               0.91            NA              <NA>
Residual                          11.37            NA              <NA>
Metrics                            <NA>            NA              <NA>
No. of groups (Pig)                  72            NA              <NA>
No. of groups (Evit)                  3            NA              <NA>
No. of observations                 861            NA              <NA>
Log-likelihood                 -2400.69            NA              <NA>
AIC value                       4801.38            NA              <NA>
                     adj. P value
Time                    0.0000000
Cu: ref.=Cu000                 NA
      035               0.6599123
      175               0.3393019
Random effects                 NA
Pig                            NA
Evit                           NA
Residual                       NA
Metrics                        NA
No. of groups (Pig)            NA
No. of groups (Evit)           NA
No. of observations            NA
Log-likelihood                 NA
AIC value                      NA

$caption
[1] "Linear mixed model fit by REML : Weight ~ Time + Cu + (1 | Pig) + (1 | Evit)"

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("lmer.display", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:geepack’

> nameEx("lmerExp")
> ### * lmerExp
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: lmerExp
> ### Title: lmerExp: transform the unit of coefficients (internal function)
> ### Aliases: lmerExp
> 
> ### ** Examples
> 
> # EXAMPLE1
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("lmerExp", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("mk.lev")
> ### * mk.lev
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: mk.lev
> ### Title: Export label and level: multiple variable
> ### Aliases: mk.lev
> 
> ### ** Examples
> 
> mk.lev(iris)
       variable   class      level    var_label  val_label
         <char>  <char>     <char>       <char>     <char>
1: Sepal.Length numeric       <NA> Sepal.Length       <NA>
2:  Sepal.Width numeric       <NA>  Sepal.Width       <NA>
3: Petal.Length numeric       <NA> Petal.Length       <NA>
4:  Petal.Width numeric       <NA>  Petal.Width       <NA>
5:      Species  factor     setosa      Species     setosa
6:      Species  factor versicolor      Species versicolor
7:      Species  factor  virginica      Species  virginica
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("mk.lev", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("mk.lev.var")
> ### * mk.lev.var
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: mk.lev.var
> ### Title: Export label and level: one variable
> ### Aliases: mk.lev.var
> 
> ### ** Examples
> 
> lapply(names(iris), function(x) {
+   jstable::mk.lev.var(iris, x)
+ })
[[1]]
[1] "Sepal.Length" "numeric"      NA            

[[2]]
[1] "Sepal.Width" "numeric"     NA           

[[3]]
[1] "Petal.Length" "numeric"      NA            

[[4]]
[1] "Petal.Width" "numeric"     NA           

[[5]]
                        v.level     
[1,] "Species" "factor" "setosa"    
[2,] "Species" "factor" "versicolor"
[3,] "Species" "factor" "virginica" 

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("mk.lev.var", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("opt.data")
> ### * opt.data
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: opt.data
> ### Title: datable option for data(DT package)
> ### Aliases: opt.data
> 
> ### ** Examples
> 
> opt.data("mtcars")
$dom
[1] "<lf<rt>Bip>"

$lengthMenu
$lengthMenu[[1]]
[1] 10 25 -1

$lengthMenu[[2]]
[1] "10"  "25"  "All"


$pageLength
[1] 10

$buttons
$buttons[[1]]
[1] "copy"

$buttons[[2]]
[1] "print"

$buttons[[3]]
$buttons[[3]]$extend
[1] "collection"

$buttons[[3]]$buttons
$buttons[[3]]$buttons[[1]]
$buttons[[3]]$buttons[[1]]$extend
[1] "csv"

$buttons[[3]]$buttons[[1]]$filename
[1] "mtcars"


$buttons[[3]]$buttons[[2]]
$buttons[[3]]$buttons[[2]]$extend
[1] "excel"

$buttons[[3]]$buttons[[2]]$filename
[1] "mtcars"


$buttons[[3]]$buttons[[3]]
$buttons[[3]]$buttons[[3]]$extend
[1] "pdf"

$buttons[[3]]$buttons[[3]]$filename
[1] "mtcars"



$buttons[[3]]$text
[1] "Download"



> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("opt.data", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("opt.roc")
> ### * opt.roc
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: opt.roc
> ### Title: datable option for ROC result(DT package)
> ### Aliases: opt.roc
> 
> ### ** Examples
> 
> options <- opt.roc("mtcars")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("opt.roc", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("opt.simpledown")
> ### * opt.simpledown
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: opt.simpledown
> ### Title: datable option for simple download(DT package)
> ### Aliases: opt.simpledown
> 
> ### ** Examples
> 
> options <- opt.simpledown("mtcars")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("opt.simpledown", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("opt.tb1")
> ### * opt.tb1
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: opt.tb1
> ### Title: datable option for table 1(DT package)
> ### Aliases: opt.tb1
> 
> ### ** Examples
> 
> options <- opt.tb1("mtcars")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("opt.tb1", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("opt.tbreg")
> ### * opt.tbreg
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: opt.tbreg
> ### Title: datable option for regression table(DT package)
> ### Aliases: opt.tbreg
> 
> ### ** Examples
> 
> options <- opt.tbreg("mtcars")
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("opt.tbreg", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()
> nameEx("svyCreateTableOne2")
> ### * svyCreateTableOne2
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: svyCreateTableOne2
> ### Title: svyCreateTableOne2: Modified svyCreateTableOne function in
> ###   tableone package
> ### Aliases: svyCreateTableOne2
> 
> ### ** Examples
> 
> library(survey)
Loading required package: grid
Loading required package: Matrix
Loading required package: survival

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

> data(nhanes)
> nhanes$SDMVPSU <- as.factor(nhanes$SDMVPSU)
> nhanesSvy <- svydesign(
+   ids = ~SDMVPSU, strata = ~SDMVSTRA, weights = ~WTMEC2YR,
+   nest = TRUE, data = nhanes
+ )
> svyCreateTableOne2(
+   vars = c("HI_CHOL", "race", "agecat", "RIAGENDR"),
+   strata = "RIAGENDR", data = nhanesSvy,
+   factorVars = c("HI_CHOL", "race", "RIAGENDR")
+ )
             level      1                      2                      p       
n            ""         "134944553.9"          "141591892.0"          ""      
HI_CHOL (%)  "0"        "112307738.4 ( 89.9) " "114402926.5 ( 87.7) " " 0.010"
             "1"        " 12579208.9 ( 10.1) " " 16056036.4 ( 12.3) " ""      
race (%)     "1"        " 21381884.2 ( 15.8) " " 20251367.4 ( 14.3) " " 0.042"
             "2"        " 89315751.4 ( 66.2) " " 92486945.1 ( 65.3) " ""      
             "3"        " 15045455.5 ( 11.1) " " 17967228.3 ( 12.7) " ""      
             "4"        "  9201462.9 (  6.8) " " 10886351.1 (  7.7) " ""      
agecat (%)   "(0,19]"   " 29299546.1 ( 21.7) " " 28150760.5 ( 19.9) " " 0.001"
             "(19,39]"  " 40497613.1 ( 30.0) " " 40640361.5 ( 28.7) " ""      
             "(39,59]"  " 41053579.4 ( 30.4) " " 42817044.0 ( 30.2) " ""      
             "(59,Inf]" " 24093815.3 ( 17.9) " " 29983725.9 ( 21.2) " ""      
RIAGENDR (%) "1"        "134944553.9 (100.0) " "        0.0 (  0.0) " "<0.001"
             "2"        "        0.0 (  0.0) " "141591892.0 (100.0) " ""      
             test sig 
n            ""   NA  
HI_CHOL (%)  ""   "**"
             ""   NA  
race (%)     ""   "**"
             ""   NA  
             ""   NA  
             ""   NA  
agecat (%)   ""   "**"
             ""   NA  
             ""   NA  
             ""   NA  
RIAGENDR (%) ""   "**"
             ""   NA  
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("svyCreateTableOne2", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survey’, ‘package:survival’, ‘package:Matrix’,
  ‘package:grid’

> nameEx("svyCreateTableOneJS")
> ### * svyCreateTableOneJS
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: svyCreateTableOneJS
> ### Title: svyCreateTableOneJS: Modified CreateTableOne function in
> ###   tableone package
> ### Aliases: svyCreateTableOneJS
> 
> ### ** Examples
> 
> library(survey)
Loading required package: grid
Loading required package: Matrix
Loading required package: survival

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

> data(nhanes)
> nhanes$SDMVPSU <- as.factor(nhanes$SDMVPSU)
> nhanesSvy <- svydesign(
+   ids = ~SDMVPSU, strata = ~SDMVSTRA, weights = ~WTMEC2YR,
+   nest = TRUE, data = nhanes
+ )
> svyCreateTableOneJS(
+   vars = c("HI_CHOL", "race", "agecat", "RIAGENDR"),
+   strata = "RIAGENDR", data = nhanesSvy,
+   factorVars = c("HI_CHOL", "race", "RIAGENDR")
+ )
$table
             level      1                      2                      p       
n            ""         "134944553.9"          "141591892.0"          ""      
HI_CHOL (%)  "0"        "112307738.4 ( 89.9) " "114402926.5 ( 87.7) " " 0.010"
             "1"        " 12579208.9 ( 10.1) " " 16056036.4 ( 12.3) " ""      
race (%)     "1"        " 21381884.2 ( 15.8) " " 20251367.4 ( 14.3) " " 0.042"
             "2"        " 89315751.4 ( 66.2) " " 92486945.1 ( 65.3) " ""      
             "3"        " 15045455.5 ( 11.1) " " 17967228.3 ( 12.7) " ""      
             "4"        "  9201462.9 (  6.8) " " 10886351.1 (  7.7) " ""      
agecat (%)   "(0,19]"   " 29299546.1 ( 21.7) " " 28150760.5 ( 19.9) " " 0.001"
             "(19,39]"  " 40497613.1 ( 30.0) " " 40640361.5 ( 28.7) " ""      
             "(39,59]"  " 41053579.4 ( 30.4) " " 42817044.0 ( 30.2) " ""      
             "(59,Inf]" " 24093815.3 ( 17.9) " " 29983725.9 ( 21.2) " ""      
RIAGENDR (%) "1"        "134944553.9 (100.0) " "        0.0 (  0.0) " "<0.001"
             "2"        "        0.0 (  0.0) " "141591892.0 (100.0) " ""      
             test sig 
n            ""   NA  
HI_CHOL (%)  ""   "**"
             ""   NA  
race (%)     ""   "**"
             ""   NA  
             ""   NA  
             ""   NA  
agecat (%)   ""   "**"
             ""   NA  
             ""   NA  
             ""   NA  
RIAGENDR (%) ""   "**"
             ""   NA  

$caption
[1] "Stratified by RIAGENDR- weighted data"

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("svyCreateTableOneJS", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survey’, ‘package:survival’, ‘package:Matrix’,
  ‘package:grid’

> nameEx("svycox.display")
> ### * svycox.display
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: svycox.display
> ### Title: svycoxph.display: table for svycoxph.object in survey package.
> ### Aliases: svycox.display
> 
> ### ** Examples
> 
> library(survival)
> data(pbc)
> pbc$sex <- factor(pbc$sex)
> pbc$stage <- factor(pbc$stage)
> pbc$randomized <- with(pbc, !is.na(trt) & trt > 0)
> biasmodel <- glm(randomized ~ age * edema, data = pbc, family = binomial)
> pbc$randprob <- fitted(biasmodel)
> 
> if (is.null(pbc$albumin)) pbc$albumin <- pbc$alb ## pre2.9.0
> 
> dpbc <- survey::svydesign(
+   id = ~1, prob = ~randprob, strata = ~edema,
+   data = subset(pbc, randomized)
+ )
> 
> model <- survey::svycoxph(Surv(time, status > 0) ~ sex + protime + albumin + stage,
+   design = dpbc
+ )
> svycox.display(model)
Stratified Independent Sampling design (with replacement)
survey::svydesign(id = ~1, prob = ~randprob, strata = ~edema, 
    data = subset(pbc, randomized))
Stratified Independent Sampling design (with replacement)
survey::svydesign(id = ~1, prob = ~randprob, strata = ~edema, 
    data = subset(pbc, randomized))
Stratified Independent Sampling design (with replacement)
survey::svydesign(id = ~1, prob = ~randprob, strata = ~edema, 
    data = subset(pbc, randomized))
Stratified Independent Sampling design (with replacement)
survey::svydesign(id = ~1, prob = ~randprob, strata = ~edema, 
    data = subset(pbc, randomized))
Stratified Independent Sampling design (with replacement)
survey::svydesign(id = ~1, prob = ~randprob, strata = ~edema, 
    data = subset(pbc, randomized))
$table
              crude HR(95%CI)      crude P value adj. HR(95%CI)       
sex: f vs m   "0.62 (0.4,0.97)"    "0.038"       "0.55 (0.33,0.9)"    
protime       "1.37 (1.09,1.72)"   "0.006"       "1.52 (1.2,1.91)"    
albumin       "0.2 (0.14,0.29)"    "< 0.001"     "0.31 (0.2,0.47)"    
stage: ref.=1 NA                   NA            NA                   
   2          "5.67 (0.77,41.78)"  "0.089"       "10.94 (1.01,118.54)"
   3          "9.78 (1.37,69.94)"  "0.023"       "17.03 (1.69,171.6)" 
   4          "22.89 (3.2,163.47)" "0.002"       "22.56 (2.25,226.41)"
              adj. P value
sex: f vs m   "0.017"     
protime       "< 0.001"   
albumin       "< 0.001"   
stage: ref.=1 NA          
   2          "0.049"     
   3          "0.016"     
   4          "0.008"     

$metric
                       [,1] [,2] [,3] [,4]
<NA>                     NA   NA   NA   NA
No. of observations  312.00   NA   NA   NA
No. of events        144.00   NA   NA   NA
AIC                 1483.12   NA   NA   NA

$caption
[1] "Survey cox model on time ('time') to event ('status > 0')"

> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("svycox.display", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> cleanEx()

detaching ‘package:survival’

> nameEx("svyglm.display")
> ### * svyglm.display
> 
> flush(stderr()); flush(stdout())
> 
> base::assign(".ptime", proc.time(), pos = "CheckExEnv")
> ### Name: svyregress.display
> ### Title: svyregress.display: table for svyglm.object
> ### Aliases: svyregress.display
> 
> ### ** Examples
> 
> library(survey)
Loading required package: grid
Loading required package: Matrix
Loading required package: survival

Attaching package: ‘survey’

The following object is masked from ‘package:graphics’:

    dotchart

> data(api)
> apistrat$tt <- c(rep(1, 20), rep(0, nrow(apistrat) - 20))
> dstrat <- svydesign(id = ~1, strata = ~stype, weights = ~pw, data = apistrat, fpc = ~fpc)
> ds <- svyglm(api00 ~ ell + meals + cname + mobility, design = dstrat)
> ds2 <- svyglm(tt ~ ell + meals + cname + mobility, design = dstrat, family = quasibinomial())
> svyregress.display(ds)
$first.line
[1] "Linear regression predicting api00- weighted data\n"

$table
                    crude coeff.(95%CI)        crude P value
ell                 "-3.73 (-4.36,-3.1)"       "< 0.001"    
meals               "-3.38 (-3.71,-3.05)"      "< 0.001"    
cname: ref.=Alameda NA                         NA           
   Amador           "47.84 (-53.49,149.17)"    "0.353"      
   Butte            "-68.16 (-169.49,33.17)"   "0.186"      
   Colusa           "-143.16 (-244.49,-41.83)" "0.006"      
   Contra Costa     "83.73 (-39.36,206.83)"    "0.181"      
   El Dorado        "28.65 (-83.24,140.54)"    "0.614"      
   Fresno           "-141.53 (-264.88,-18.17)" "0.025"      
   Humboldt         "16.84 (-84.49,118.17)"    "0.743"      
   Inyo             "-15.72 (-120.44,88.99)"   "0.767"      
   Kern             "-16.93 (-163.64,129.79)"  "0.82"       
   Kings            "-166.16 (-267.49,-64.83)" "0.001"      
   Los Angeles      "-61.65 (-171.75,48.45)"   "0.27"       
   Marin            "136.85 (13.38,260.32)"    "0.03"       
   Mariposa         "10.84 (-90.49,112.17)"    "0.833"      
   Mendocino        "-63.14 (-164.48,38.2)"    "0.22"       
   Merced           "-124.3 (-227.34,-21.27)"  "0.018"      
   Monterey         "-32.33 (-182.66,118)"     "0.672"      
   Napa             "-35.16 (-136.49,66.17)"   "0.494"      
   Orange           "15.8 (-108.91,140.51)"    "0.803"      
   Placer           "111.2 (-25.13,247.52)"    "0.109"      
   Riverside        "-104.26 (-209.26,0.74)"   "0.052"      
   Sacramento       "-3.86 (-147.46,139.74)"   "0.958"      
   San Bernardino   "-127.61 (-247.75,-7.47)"  "0.038"      
   San Diego        "8.96 (-111.2,129.12)"     "0.883"      
   San Francisco    "-163.11 (-273.5,-52.71)"  "0.004"      
   San Joaquin      "-2.07 (-107.4,103.26)"    "0.969"      
   San Mateo        "79.45 (-99.46,258.37)"    "0.382"      
   Santa Barbara    "47.84 (-53.49,149.17)"    "0.353"      
   Santa Clara      "-31.04 (-166.54,104.46)"  "0.652"      
   Santa Cruz       "57.37 (-44.27,159.01)"    "0.267"      
   Shasta           "-32.66 (-152.79,87.47)"   "0.592"      
   Siskiyou         "84.84 (-16.49,186.17)"    "0.1"        
   Solano           "48.84 (-52.49,150.17)"    "0.343"      
   Sonoma           "52.84 (-91.64,197.32)"    "0.471"      
   Stanislaus       "16.84 (-84.49,118.17)"    "0.743"      
   Tehama           "69.84 (-31.49,171.17)"    "0.175"      
   Tulare           "-68.08 (-190.59,54.43)"   "0.274"      
   Tuolumne         "17.84 (-83.49,119.17)"    "0.729"      
   Ventura          "12.01 (-106.92,130.95)"   "0.842"      
   Yolo             "-76.14 (-185.69,33.41)"   "0.172"      
mobility            "-1.43 (-3.31,0.46)"       "0.137"      
                    adj. coeff.(95%CI)         adj. P value
ell                 "-0.7 (-1.53,0.13)"        "0.098"     
meals               "-3.28 (-3.96,-2.61)"      "< 0.001"   
cname: ref.=Alameda NA                         NA          
   Amador           "-49.07 (-109.23,11.09)"   "0.109"     
   Butte            "-16.79 (-84.61,51.02)"    "0.625"     
   Colusa           "-34.66 (-97.79,28.48)"    "0.28"      
   Contra Costa     "-2.19 (-83.17,78.78)"     "0.957"     
   El Dorado        "-67.35 (-128.41,-6.28)"   "0.031"     
   Fresno           "38.63 (-44.56,121.82)"    "0.36"      
   Humboldt         "-109.43 (-169.07,-49.78)" "< 0.001"   
   Inyo             "-34.13 (-113.71,45.44)"   "0.398"     
   Kern             "4.97 (-69.46,79.41)"      "0.895"     
   Kings            "-52.63 (-124.98,19.71)"   "0.153"     
   Los Angeles      "19.3 (-51.04,89.64)"      "0.589"     
   Marin            "11.3 (-86.99,109.59)"     "0.821"     
   Mariposa         "-82.79 (-143.03,-22.55)"  "0.007"     
   Mendocino        "11.5 (-106.47,129.48)"    "0.848"     
   Merced           "-13.49 (-91.91,64.92)"    "0.734"     
   Monterey         "-18.77 (-101.81,64.26)"   "0.656"     
   Napa             "-49.01 (-112.2,14.17)"    "0.127"     
   Orange           "60.48 (-7.1,128.07)"      "0.079"     
   Placer           "9.52 (-75.32,94.36)"      "0.825"     
   Riverside        "-54.71 (-129.67,20.24)"   "0.151"     
   Sacramento       "-24 (-108.83,60.83)"      "0.577"     
   San Bernardino   "-48.23 (-125.31,28.85)"   "0.218"     
   San Diego        "19.4 (-45.67,84.46)"      "0.557"     
   San Francisco    "-120.99 (-231.88,-10.11)" "0.033"     
   San Joaquin      "-45.96 (-114.44,22.53)"   "0.187"     
   San Mateo        "-21.33 (-142.11,99.45)"   "0.728"     
   Santa Barbara    "-13.77 (-72.62,45.07)"    "0.644"     
   Santa Clara      "-8.5 (-87.85,70.85)"      "0.833"     
   Santa Cruz       "-20.97 (-85.44,43.49)"    "0.521"     
   Shasta           "75.84 (-30.77,182.45)"    "0.162"     
   Siskiyou         "42.2 (-21.83,106.22)"     "0.195"     
   Solano           "23.63 (-41.34,88.61)"     "0.474"     
   Sonoma           "14.9 (-66.17,95.97)"      "0.717"     
   Stanislaus       "-100.63 (-160.58,-40.68)" "0.001"     
   Tehama           "103.99 (35.05,172.92)"    "0.003"     
   Tulare           "19 (-55.28,93.28)"        "0.614"     
   Tuolumne         "-55.71 (-116.25,4.83)"    "0.071"     
   Ventura          "-4.67 (-69.02,59.67)"     "0.886"     
   Yolo             "16.23 (-85.63,118.09)"    "0.753"     
mobility            "0.19 (-0.61,1)"           "0.638"     

$last.lines
[1] "No. of observations = 200\nAIC value = 2333.5397\n\n"

attr(,"class")
[1] "display" "list"   
> svyregress.display(ds2)
$first.line
[1] "Logistic regression predicting tt- weighted data\n"

$table
                    crude OR.(95%CI)    crude P value adj. OR.(95%CI)     
ell                 "1.02 (1,1.05)"     "0.047"       "1.04 (1,1.09)"     
meals               "1.01 (0.99,1.03)"  "0.255"       "0.98 (0.95,1.01)"  
cname: ref.=Alameda NA                  NA            NA                  
   Amador           "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Butte            "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Colusa           "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Contra Costa     "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   El Dorado        "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Fresno           "1.74 (0.11,26.38)" "0.687"       "1.68 (0.07,39.4)"  
   Humboldt         "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Inyo             "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Kern             "1.73 (0.09,34.02)" "0.717"       "3.33 (0.14,78.77)" 
   Kings            "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Los Angeles      "1.86 (0.18,18.87)" "0.598"       "2.47 (0.18,33.67)" 
   Marin            "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Mariposa         "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Mendocino        "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Merced           "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Monterey         "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Napa             "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Orange           "1.58 (0.11,22.68)" "0.734"       "1 (0.06,15.93)"    
   Placer           "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Riverside        "2.95 (0.22,38.83)" "0.408"       "4.62 (0.22,96.35)" 
   Sacramento       "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   San Bernardino   "0.74 (0.04,14.5)"  "0.839"       "1.07 (0.04,28.12)" 
   San Diego        "3.89 (0.29,52.76)" "0.306"       "5.28 (0.35,80.31)" 
   San Francisco    "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   San Joaquin      "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   San Mateo        "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Santa Barbara    "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Santa Clara      "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Santa Cruz       "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Shasta           "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Siskiyou         "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Solano           "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Sonoma           "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Stanislaus       "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Tehama           "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Tulare           "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Tuolumne         "0 (0,0)"           "< 0.001"     "0 (0,0)"           
   Ventura          "7.01 (0.55,90.15)" "0.134"       "9.68 (0.58,161.79)"
   Yolo             "0 (0,0)"           "< 0.001"     "0 (0,0)"           
mobility            "1.01 (0.98,1.03)"  "0.506"       "1 (0.97,1.04)"     
                    adj. P value
ell                 "0.061"     
meals               "0.182"     
cname: ref.=Alameda NA          
   Amador           "< 0.001"   
   Butte            "< 0.001"   
   Colusa           "< 0.001"   
   Contra Costa     "< 0.001"   
   El Dorado        "< 0.001"   
   Fresno           "0.747"     
   Humboldt         "< 0.001"   
   Inyo             "< 0.001"   
   Kern             "0.454"     
   Kings            "< 0.001"   
   Los Angeles      "0.494"     
   Marin            "< 0.001"   
   Mariposa         "< 0.001"   
   Mendocino        "< 0.001"   
   Merced           "< 0.001"   
   Monterey         "< 0.001"   
   Napa             "< 0.001"   
   Orange           "0.998"     
   Placer           "< 0.001"   
   Riverside        "0.321"     
   Sacramento       "< 0.001"   
   San Bernardino   "0.969"     
   San Diego        "0.229"     
   San Francisco    "< 0.001"   
   San Joaquin      "< 0.001"   
   San Mateo        "< 0.001"   
   Santa Barbara    "< 0.001"   
   Santa Clara      "< 0.001"   
   Santa Cruz       "< 0.001"   
   Shasta           "< 0.001"   
   Siskiyou         "< 0.001"   
   Solano           "< 0.001"   
   Sonoma           "< 0.001"   
   Stanislaus       "< 0.001"   
   Tehama           "< 0.001"   
   Tulare           "< 0.001"   
   Tuolumne         "< 0.001"   
   Ventura          "0.113"     
   Yolo             "< 0.001"   
mobility            "0.787"     

$last.lines
[1] "No. of observations = 200\n\n"

attr(,"class")
[1] "display" "list"   
> 
> 
> 
> base::assign(".dptime", (proc.time() - get(".ptime", pos = "CheckExEnv")), pos = "CheckExEnv")
> base::cat("svyglm.display", base::get(".format_ptime", pos = 'CheckExEnv')(get(".dptime", pos = "CheckExEnv")), "\n", file=base::get(".ExTimings", pos = 'CheckExEnv'), append=TRUE, sep="\t")
> ### * <FOOTER>
> ###
> cleanEx()

detaching ‘package:survey’, ‘package:survival’, ‘package:Matrix’,
  ‘package:grid’

> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  18.988 0.436 19.424 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
